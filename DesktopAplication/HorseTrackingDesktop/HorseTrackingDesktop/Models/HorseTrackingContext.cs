// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace HorseTrackingDesktop.Models
{
    public partial class HorseTrackingContext : DbContext
    {
        public HorseTrackingContext()
        {
        }

        public HorseTrackingContext(DbContextOptions<HorseTrackingContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Activities> Activities { get; set; }
        public virtual DbSet<Competitions> Competitions { get; set; }
        public virtual DbSet<Contests> Contests { get; set; }
        public virtual DbSet<Diets> Diets { get; set; }
        public virtual DbSet<Forages> Forages { get; set; }
        public virtual DbSet<HorseGenders> HorseGenders { get; set; }
        public virtual DbSet<Horses> Horses { get; set; }
        public virtual DbSet<MealNames> MealNames { get; set; }
        public virtual DbSet<Meals> Meals { get; set; }
        public virtual DbSet<Notifications> Notifications { get; set; }
        public virtual DbSet<NutritionPlans> NutritionPlans { get; set; }
        public virtual DbSet<Participations> Participations { get; set; }
        public virtual DbSet<PeopleDetails> PeopleDetails { get; set; }
        public virtual DbSet<Portions> Portions { get; set; }
        public virtual DbSet<Professionals> Professionals { get; set; }
        public virtual DbSet<Shareds> Shareds { get; set; }
        public virtual DbSet<Specialisations> Specialisations { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<UnitOfMeasures> UnitOfMeasures { get; set; }
        public virtual DbSet<UserAcounts> UserAcounts { get; set; }
        public virtual DbSet<UserTypes> UserTypes { get; set; }
        public virtual DbSet<Visits> Visits { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Activities>(entity =>
            {
                entity.HasKey(e => e.ActivityId)
                    .HasName("PK__Activiti__0FC9CBCC35F300D7");

                entity.Property(e => e.ActivityId).HasColumnName("activityID");

                entity.Property(e => e.ActivityType).HasColumnName("activityType");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("date");

                entity.Property(e => e.Description)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.Intensivity).HasColumnName("intensivity");

                entity.Property(e => e.Satisfaction).HasColumnName("satisfaction");

                entity.Property(e => e.Time).HasColumnName("time");

                entity.Property(e => e.TrainerId).HasColumnName("trainerID");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.HasOne(d => d.Horse)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.HorseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Activitie__horse__4DFF6746");

                entity.HasOne(d => d.Trainer)
                    .WithMany(p => p.ActivitiesTrainer)
                    .HasForeignKey(d => d.TrainerId)
                    .HasConstraintName("FK__Activitie__train__4D0B430D");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ActivitiesUser)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Activitie__satis__4C171ED4");
            });

            modelBuilder.Entity<Competitions>(entity =>
            {
                entity.HasKey(e => e.CompetitionId)
                    .HasName("PK__Competit__3A6431DAE8AD16FE");

                entity.Property(e => e.CompetitionId).HasColumnName("competitionID");

                entity.Property(e => e.Date)
                    .HasColumnType("date")
                    .HasColumnName("date");

                entity.Property(e => e.Description)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.Rank)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rank");

                entity.Property(e => e.Spot)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("spot");
            });

            modelBuilder.Entity<Contests>(entity =>
            {
                entity.HasKey(e => e.ContestId)
                    .HasName("PK__Contests__C5A32706A0CD586A");

                entity.Property(e => e.ContestId).HasColumnName("contestID");

                entity.Property(e => e.CompetitionId).HasColumnName("competitionID");

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("level");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.HasOne(d => d.Competition)
                    .WithMany(p => p.Contests)
                    .HasForeignKey(d => d.CompetitionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contests__compet__306F045F");
            });

            modelBuilder.Entity<Diets>(entity =>
            {
                entity.HasKey(e => e.DietId)
                    .HasName("PK__Diets__D9B41D0845E2CD7E");

                entity.Property(e => e.DietId).HasColumnName("dietID");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.IsActive).HasColumnName("isActive");

                entity.Property(e => e.NutritionPlanId).HasColumnName("nutritionPlanID");

                entity.HasOne(d => d.Horse)
                    .WithMany(p => p.Diets)
                    .HasForeignKey(d => d.HorseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Diets__horseID__48468DF0");

                entity.HasOne(d => d.NutritionPlan)
                    .WithMany(p => p.Diets)
                    .HasForeignKey(d => d.NutritionPlanId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Diets__nutrition__493AB229");
            });

            modelBuilder.Entity<Forages>(entity =>
            {
                entity.HasKey(e => e.ForageId)
                    .HasName("PK__Forages__9A7B3BD3F85E5711");

                entity.Property(e => e.ForageId).HasColumnName("forageID");

                entity.Property(e => e.Capacity).HasColumnName("capacity");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(92)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Producent)
                    .HasMaxLength(57)
                    .IsUnicode(false)
                    .HasColumnName("producent");

                entity.Property(e => e.UnitId).HasColumnName("unitID");

                entity.HasOne(d => d.Unit)
                    .WithMany(p => p.Forages)
                    .HasForeignKey(d => d.UnitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Forages__capacit__24FD51B3");
            });

            modelBuilder.Entity<HorseGenders>(entity =>
            {
                entity.HasKey(e => e.GenderId)
                    .HasName("PK__HorseGen__306E2220FB6406EA");

                entity.Property(e => e.GenderId).HasColumnName("genderID");

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("gender");
            });

            modelBuilder.Entity<Horses>(entity =>
            {
                entity.HasKey(e => e.HorseId)
                    .HasName("PK__Horses__C26F5D922985C1F6");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.Birthday)
                    .HasColumnType("date")
                    .HasColumnName("birthday");

                entity.Property(e => e.Breeder)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("breeder");

                entity.Property(e => e.Father)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("father");

                entity.Property(e => e.GenderId).HasColumnName("genderID");

                entity.Property(e => e.Mother)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("mother");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Passport)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("passport");

                entity.Property(e => e.Photo)
                    .IsUnicode(false)
                    .HasColumnName("photo");

                entity.Property(e => e.Race)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("race");

                entity.Property(e => e.StatusId).HasColumnName("statusID");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.HasOne(d => d.Gender)
                    .WithMany(p => p.Horses)
                    .HasForeignKey(d => d.GenderId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Horses__genderID__38102627");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.Horses)
                    .HasForeignKey(d => d.StatusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Horses__statusID__371C01EE");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Horses)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Horses__userID__39044A60");
            });

            modelBuilder.Entity<MealNames>(entity =>
            {
                entity.HasKey(e => e.MealNameId)
                    .HasName("PK__MealName__40C60D922BB4E98F");

                entity.Property(e => e.MealNameId).HasColumnName("mealNameID");

                entity.Property(e => e.MealName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("mealName");
            });

            modelBuilder.Entity<Meals>(entity =>
            {
                entity.HasKey(e => e.MealId)
                    .HasName("PK__Meals__0D609C9A8ABA8BC5");

                entity.Property(e => e.MealId).HasColumnName("mealID");

                entity.Property(e => e.Hour)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("hour");

                entity.Property(e => e.MealNameId).HasColumnName("mealNameID");

                entity.Property(e => e.NutritionPlanId).HasColumnName("nutritionPlanID");

                entity.HasOne(d => d.MealName)
                    .WithMany(p => p.Meals)
                    .HasForeignKey(d => d.MealNameId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Meals__mealNameI__1C680BB2");

                entity.HasOne(d => d.NutritionPlan)
                    .WithMany(p => p.Meals)
                    .HasForeignKey(d => d.NutritionPlanId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Meals__nutrition__1B73E779");
            });

            modelBuilder.Entity<Notifications>(entity =>
            {
                entity.HasKey(e => e.NotificationId)
                    .HasName("PK__Notifica__4BA5CE89CC00422E");

                entity.Property(e => e.NotificationId).HasColumnName("notificationID");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("date")
                    .HasColumnName("createdDate");

                entity.Property(e => e.Description)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.SendDate)
                    .HasColumnType("date")
                    .HasColumnName("sendDate");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("title");

                entity.Property(e => e.TurnOn).HasColumnName("turnOn");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.HasOne(d => d.Horse)
                    .WithMany(p => p.Notifications)
                    .HasForeignKey(d => d.HorseId)
                    .HasConstraintName("FK__Notificat__horse__3CD4DB44");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Notifications)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Notificat__userI__3BE0B70B");
            });

            modelBuilder.Entity<NutritionPlans>(entity =>
            {
                entity.HasKey(e => e.NutritionPlanId)
                    .HasName("PK__Nutritio__BC9D3305C661E648");

                entity.Property(e => e.NutritionPlanId).HasColumnName("nutritionPlanID");

                entity.Property(e => e.Color)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("color");

                entity.Property(e => e.Description)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.Icon).HasColumnName("icon");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("title");
            });

            modelBuilder.Entity<Participations>(entity =>
            {
                entity.HasKey(e => e.ParticipationId)
                    .HasName("PK__Particip__78B6F525FB8DE865");

                entity.Property(e => e.ParticipationId).HasColumnName("participationID");

                entity.Property(e => e.ContestId).HasColumnName("contestID");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.Place).HasColumnName("place");

                entity.Property(e => e.Result)
                    .IsUnicode(false)
                    .HasColumnName("result");

                entity.HasOne(d => d.Contest)
                    .WithMany(p => p.Participations)
                    .HasForeignKey(d => d.ContestId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Participa__conte__51CFF82A");

                entity.HasOne(d => d.Horse)
                    .WithMany(p => p.Participations)
                    .HasForeignKey(d => d.HorseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Participa__horse__50DBD3F1");
            });

            modelBuilder.Entity<PeopleDetails>(entity =>
            {
                entity.HasKey(e => e.DetailId)
                    .HasName("PK__PeopleDe__83077839179C4673");

                entity.Property(e => e.DetailId).HasColumnName("detailID");

                entity.Property(e => e.City)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("city");

                entity.Property(e => e.Email)
                    .HasMaxLength(320)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Name)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("name");

                entity.Property(e => e.Number)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("number");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("phoneNumber");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("postalCode");

                entity.Property(e => e.Street)
                    .HasMaxLength(90)
                    .IsUnicode(false)
                    .HasColumnName("street");

                entity.Property(e => e.Surname)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("surname");
            });

            modelBuilder.Entity<Portions>(entity =>
            {
                entity.HasKey(e => e.PortionId)
                    .HasName("PK__Portions__9B90049D5E90D919");

                entity.Property(e => e.PortionId).HasColumnName("portionID");

                entity.Property(e => e.Amount).HasColumnName("amount");

                entity.Property(e => e.ForageId).HasColumnName("forageID");

                entity.Property(e => e.MealId).HasColumnName("mealID");

                entity.Property(e => e.UnitId).HasColumnName("unitID");

                entity.HasOne(d => d.Forage)
                    .WithMany(p => p.Portions)
                    .HasForeignKey(d => d.ForageId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Portions__forage__2C9E737B");

                entity.HasOne(d => d.Meal)
                    .WithMany(p => p.Portions)
                    .HasForeignKey(d => d.MealId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Portions__mealID__2BAA4F42");

                entity.HasOne(d => d.Unit)
                    .WithMany(p => p.Portions)
                    .HasForeignKey(d => d.UnitId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Portions__unitID__2D9297B4");
            });

            modelBuilder.Entity<Professionals>(entity =>
            {
                entity.HasKey(e => e.ProfessionalId)
                    .HasName("PK__Professi__A734593FB3B8767A");

                entity.Property(e => e.ProfessionalId).HasColumnName("professionalID");

                entity.Property(e => e.Degree)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("degree");

                entity.Property(e => e.DetailId).HasColumnName("detailID");

                entity.Property(e => e.SpecialisationId).HasColumnName("specialisationID");

                entity.HasOne(d => d.Detail)
                    .WithMany(p => p.Professionals)
                    .HasForeignKey(d => d.DetailId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Professio__detai__28CDE297");

                entity.HasOne(d => d.Specialisation)
                    .WithMany(p => p.Professionals)
                    .HasForeignKey(d => d.SpecialisationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Professio__speci__27D9BE5E");
            });

            modelBuilder.Entity<Shareds>(entity =>
            {
                entity.HasKey(e => e.SharedId)
                    .HasName("PK__Shareds__089ADB21890D18E2");

                entity.Property(e => e.SharedId).HasColumnName("sharedID");

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("code");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("endDate");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("startDate");

                entity.Property(e => e.UserScanId).HasColumnName("userScanID");

                entity.Property(e => e.UserShareId).HasColumnName("userShareID");

                entity.HasOne(d => d.Horse)
                    .WithMany(p => p.Shareds)
                    .HasForeignKey(d => d.HorseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Shareds__horseID__4381D8D3");

                entity.HasOne(d => d.UserScan)
                    .WithMany(p => p.SharedsUserScan)
                    .HasForeignKey(d => d.UserScanId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Shareds__userSca__456A2145");

                entity.HasOne(d => d.UserShare)
                    .WithMany(p => p.SharedsUserShare)
                    .HasForeignKey(d => d.UserShareId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Shareds__userSha__4475FD0C");
            });

            modelBuilder.Entity<Specialisations>(entity =>
            {
                entity.HasKey(e => e.SpecialisationId)
                    .HasName("PK__Speciali__0171ED123AA3E3EB");

                entity.Property(e => e.SpecialisationId).HasColumnName("specialisationID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(85)
                    .IsUnicode(false)
                    .HasColumnName("name");
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.Property(e => e.StatusId).HasColumnName("statusID");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("name");
            });

            modelBuilder.Entity<UnitOfMeasures>(entity =>
            {
                entity.HasKey(e => e.UnitId)
                    .HasName("PK__UnitOfMe__55D79215E11158ED");

                entity.Property(e => e.UnitId).HasColumnName("unitID");

                entity.Property(e => e.UnitName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("unitName");
            });

            modelBuilder.Entity<UserAcounts>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__UserAcou__CB9A1CDF9B6E811E");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.Property(e => e.CreatedDateTime)
                    .HasColumnType("datetime")
                    .HasColumnName("createdDateTime");

                entity.Property(e => e.DetailId).HasColumnName("detailID");

                entity.Property(e => e.Hash)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("hash");

                entity.Property(e => e.Login)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("login");

                entity.Property(e => e.Salt)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("salt");

                entity.Property(e => e.TypeId).HasColumnName("typeID");

                entity.HasOne(d => d.Detail)
                    .WithMany(p => p.UserAcounts)
                    .HasForeignKey(d => d.DetailId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserAcoun__detai__343F9543");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.UserAcounts)
                    .HasForeignKey(d => d.TypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserAcoun__creat__334B710A");
            });

            modelBuilder.Entity<UserTypes>(entity =>
            {
                entity.HasKey(e => e.TypeId)
                    .HasName("PK__UserType__F04DF11A6F65B76A");

                entity.Property(e => e.TypeId).HasColumnName("typeID");

                entity.Property(e => e.TypeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("typeName");
            });

            modelBuilder.Entity<Visits>(entity =>
            {
                entity.HasKey(e => e.VisitId)
                    .HasName("PK__Visits__0D1361E8B253868D");

                entity.Property(e => e.VisitId).HasColumnName("visitID");

                entity.Property(e => e.Cost).HasColumnName("cost");

                entity.Property(e => e.HorseId).HasColumnName("horseID");

                entity.Property(e => e.Image)
                    .IsUnicode(false)
                    .HasColumnName("image");

                entity.Property(e => e.ProfessionalId).HasColumnName("professionalID");

                entity.Property(e => e.Summary)
                    .IsUnicode(false)
                    .HasColumnName("summary");

                entity.Property(e => e.VisitDate)
                    .HasColumnType("datetime")
                    .HasColumnName("visitDate");

                entity.HasOne(d => d.Horse)
                    .WithMany(p => p.Visits)
                    .HasForeignKey(d => d.HorseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Visits__horseID__40A56C28");

                entity.HasOne(d => d.Professional)
                    .WithMany(p => p.Visits)
                    .HasForeignKey(d => d.ProfessionalId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Visits__professi__3FB147EF");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(System.Configuration.ConfigurationManager.ConnectionStrings["connectionString"].ConnectionString);
        }
    }
}